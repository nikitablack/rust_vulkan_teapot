pub struct TeapotData {
    control_points: Vec<f32>,
}

impl TeapotData {
    pub fn new() -> Self {
        let control_points = vec![
            0.2000, 0.0000, 2.70000, 0.2000, -0.1120, 2.70000, 0.1120, -0.2000, 2.70000, 0.0000,
            -0.2000, 2.70000, 1.3375, 0.0000, 2.53125, 1.3375, -0.7490, 2.53125, 0.7490, -1.3375,
            2.53125, 0.0000, -1.3375, 2.53125, 1.4375, 0.0000, 2.53125, 1.4375, -0.8050, 2.53125,
            0.8050, -1.4375, 2.53125, 0.0000, -1.4375, 2.53125, 1.5000, 0.0000, 2.40000, 1.5000,
            -0.8400, 2.40000, 0.8400, -1.5000, 2.40000, 0.0000, -1.5000, 2.40000, 1.7500, 0.0000,
            1.87500, 1.7500, -0.9800, 1.87500, 0.9800, -1.7500, 1.87500, 0.0000, -1.7500, 1.87500,
            2.0000, 0.0000, 1.35000, 2.0000, -1.1200, 1.35000, 1.1200, -2.0000, 1.35000, 0.0000,
            -2.0000, 1.35000, 2.0000, 0.0000, 0.90000, 2.0000, -1.1200, 0.90000, 1.1200, -2.0000,
            0.90000, 0.0000, -2.0000, 0.90000, -2.0000, 0.0000, 0.90000, 2.0000, 0.0000, 0.45000,
            2.0000, -1.1200, 0.45000, 1.1200, -2.0000, 0.45000, 0.0000, -2.0000, 0.45000, 1.5000,
            0.0000, 0.22500, 1.5000, -0.8400, 0.22500, 0.8400, -1.5000, 0.22500, 0.0000, -1.5000,
            0.22500, 1.5000, 0.0000, 0.15000, 1.5000, -0.8400, 0.15000, 0.8400, -1.5000, 0.15000,
            0.0000, -1.5000, 0.15000, -1.6000, 0.0000, 2.02500, -1.6000, -0.3000, 2.02500, -1.5000,
            -0.3000, 2.25000, -1.5000, 0.0000, 2.25000, -2.3000, 0.0000, 2.02500, -2.3000, -0.3000,
            2.02500, -2.5000, -0.3000, 2.25000, -2.5000, 0.0000, 2.25000, -2.7000, 0.0000, 2.02500,
            -2.7000, -0.3000, 2.02500, -3.0000, -0.3000, 2.25000, -3.0000, 0.0000, 2.25000,
            -2.7000, 0.0000, 1.80000, -2.7000, -0.3000, 1.80000, -3.0000, -0.3000, 1.80000,
            -3.0000, 0.0000, 1.80000, -2.7000, 0.0000, 1.57500, -2.7000, -0.3000, 1.57500, -3.0000,
            -0.3000, 1.35000, -3.0000, 0.0000, 1.35000, -2.5000, 0.0000, 1.12500, -2.5000, -0.3000,
            1.12500, -2.6500, -0.3000, 0.93750, -2.6500, 0.0000, 0.93750, -2.0000, -0.3000,
            0.90000, -1.9000, -0.3000, 0.60000, -1.9000, 0.0000, 0.60000, 1.7000, 0.0000, 1.42500,
            1.7000, -0.6600, 1.42500, 1.7000, -0.6600, 0.60000, 1.7000, 0.0000, 0.60000, 2.6000,
            0.0000, 1.42500, 2.6000, -0.6600, 1.42500, 3.1000, -0.6600, 0.82500, 3.1000, 0.0000,
            0.82500, 2.3000, 0.0000, 2.10000, 2.3000, -0.2500, 2.10000, 2.4000, -0.2500, 2.02500,
            2.4000, 0.0000, 2.02500, 2.7000, 0.0000, 2.40000, 2.7000, -0.2500, 2.40000, 3.3000,
            -0.2500, 2.40000, 3.3000, 0.0000, 2.40000, 2.8000, 0.0000, 2.47500, 2.8000, -0.2500,
            2.47500, 3.5250, -0.2500, 2.49375, 3.5250, 0.0000, 2.49375, 2.9000, 0.0000, 2.47500,
            2.9000, -0.1500, 2.47500, 3.4500, -0.1500, 2.51250, 3.4500, 0.0000, 2.51250, 2.8000,
            0.0000, 2.40000, 2.8000, -0.1500, 2.40000, 3.2000, -0.1500, 2.40000, 3.2000, 0.0000,
            2.40000, 0.0000, 0.0000, 3.15000, 0.8000, 0.0000, 3.15000, 0.8000, -0.4500, 3.15000,
            0.4500, -0.8000, 3.15000, 0.0000, -0.8000, 3.15000, 0.0000, 0.0000, 2.85000, 1.4000,
            0.0000, 2.40000, 1.4000, -0.7840, 2.40000, 0.7840, -1.4000, 2.40000, 0.0000, -1.4000,
            2.40000, 0.4000, 0.0000, 2.55000, 0.4000, -0.2240, 2.55000, 0.2240, -0.4000, 2.55000,
            0.0000, -0.4000, 2.55000, 1.3000, 0.0000, 2.55000, 1.3000, -0.7280, 2.55000, 0.7280,
            -1.3000, 2.55000, 0.0000, -1.3000, 2.55000, 1.3000, 0.0000, 2.40000, 1.3000, -0.7280,
            2.40000, 0.7280, -1.3000, 2.40000, 0.0000, -1.3000, 2.40000,
        ];

        Self { control_points }
    }

    pub fn get_control_points_slice(&self) -> &[u8] {
        bytemuck::cast_slice(&self.control_points)
    }
}
